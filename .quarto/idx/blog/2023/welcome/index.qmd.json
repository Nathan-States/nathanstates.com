{"title":"Switching Over to Quarto (And Why You Should Consider Too)","markdown":{"yaml":{"title":"Switching Over to Quarto (And Why You Should Consider Too)","description":"Explaining the new look.","author":"Nathan States","date":"2023-01-10","categories":["updates"]},"headingText":"1. Quarto is easy.","containsRefs":false,"markdown":"\n\nTo all my eight viewers who happened to stumble upon the initial release of my blog - you might of noticed it looks drastically different now. When I first built this site, I was using `blogdown` along with Hugo Apero, but I'm making the switch over to Quarto from now on.\n\n![](thumbnail.jpg)\n\nHere are some reasons why you should consider migrating as well.\n\n\n`blogdown` is essentially the same as Hugo, but with the ability to compile RMarkdown files. Some themes are very easy to work with, while others can be a bit of a pain. Quarto is extremely simple and comes with all the tools anyone would need for blogging.\n\n[Hugo Apero](https://hugo-apero-docs.netlify.app/), the theme I used previously, is actually designed really well in this respect, so this may or may not be a problem for you - it's very theme dependent.\n\n## 2. Not just for blogging.\n\nQuarto is capable of creating much more than blogs; presentations, PDF reports, interactive documents, and easy documentation pages are all supported. You can view some examples in their [gallery](https://quarto.org/docs/gallery/).\n\nThere's obviously a good amount of carryover between these formats and this blog, so it's good practice for the real world down the line.\n\n## 3. It supports multiple languages\n\nTechnically, `blogdown` *does* as well; you can use the `reticulate` package and hard-code HTML into RMarkdown to create D3 objects, for example. And by that nature, you can always just stick with RMarkdown. However, Quarto uses a custom `.qmd` format, which is specifically designed for cross-language support. That's more or less *the* selling point of using Quarto.\n\n## 4. Awesome Visual Bar\n\nThis probably falls under point #1, but it's so neat that it deserves it's own section. The visual tab makes creating documents incredibly intuitive and easy, and includes almost everything you'd want out of a modern text editor.\n\nIt's pretty neat.\n\n![](visual-bar.png)\n\n## 5. It's compatible with Hugo.\n\nMy old posts were written in RMarkdown, but Quarto only supports `qmd`. Hugo understands this format perfectly fine, though, so if I were to ever go back to `blogdown`, it would be incredibly easy to migrate.\n\n## 6. Superior to Distill?\n\nI don't think the advantages of Quarto are so significant that it mandates switching over to [Distill](https://rstudio.github.io/distill/). With that said, while both offer blogs that are extremely similar in style, Quarto has more features and support. If you are creating your first blog, there isn't much of a reason (IMO) to choose Distill over Quarto.\n\n## Posts to Read About Quarto\n\nHere is a [github](https://github.com/mcanouil/awesome-quarto) that has a ton of links related to making awesome things in Quarto. Here are some posts I'd recommend reading:\n\n-   Alison Hill: [We don't talk about Quarto.](https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/).\n-   Danielle Navarro: [Posting a Distill blog to Quarto.](https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto/)\n-   Yihui Xie: [With Quarto Coming, is RMarkdown Going Away? No.](https://yihui.org/en/2022/04/quarto-r-markdown/)\n\nOn that last point, I'll briefly discuss the...\n\n## Disadvantages of Quarto\n\nReally, the main one is lack of customization. Hugo is far more complex, and can create some sophisticated websites to suit any need. Quarto, not so much. This does make blogging on this platform feel slightly generic in comparison, unfortunately. Optimized Hugo sites might also be faster, though admittedly, I have no idea if this is likely / true or not.\n\nWith that said, the pros outweigh the cons in my case, which is why I decided to make the jump. I hope you enjoy the new look.\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../assets/styles.css"],"highlight-style":{"light":"../../../assets/syntax-light.theme","dark":"../../../assets/syntax-dark.theme"},"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"source","theme":{"light":"../../../assets/states-light.scss","dark":"../../../assets/states-dark.scss"},"smooth-scroll":true,"code-block-border-left":true,"title-block-banner":true,"title":"Switching Over to Quarto (And Why You Should Consider Too)","description":"Explaining the new look.","author":"Nathan States","date":"2023-01-10","categories":["updates"]},"extensions":{"book":{"multiFile":true}}}}}